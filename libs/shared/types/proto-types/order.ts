// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.12.4
// source: libs/proto/order.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Empty, ErrorInterface } from "./common";

export const protobufPackage = "order";

export interface CreateOrderInterface {
  customerId: string;
  goldGrams: string;
  amount: number;
}

export interface CreateOrderResponse {
  data: OrderType | undefined;
  success: boolean;
  error: ErrorInterface | undefined;
}

export interface GetOrderListResponse {
  data: OrderType[];
  success: boolean;
  error: ErrorInterface | undefined;
}

export interface OrderType {
  id: string;
  createdAt: string;
  updatedAt: string;
  customerId: string;
  goldGrams: string;
  amount: number;
  gramPrice: number;
  totalPrice: number;
}

export const ORDER_PACKAGE_NAME = "order";

export interface OrderServiceClient {
  createOrder(request: CreateOrderInterface): Observable<CreateOrderResponse>;

  getOrderList(request: Empty): Observable<GetOrderListResponse>;
}

export interface OrderServiceController {
  createOrder(
    request: CreateOrderInterface,
  ): Promise<CreateOrderResponse> | Observable<CreateOrderResponse> | CreateOrderResponse;

  getOrderList(request: Empty): Promise<GetOrderListResponse> | Observable<GetOrderListResponse> | GetOrderListResponse;
}

export function OrderServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createOrder", "getOrderList"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("OrderService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("OrderService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ORDER_SERVICE_NAME = "OrderService";
